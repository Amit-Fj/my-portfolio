{"version":3,"sources":["components/introduction.jsx","App.js","serviceWorker.js","index.js"],"names":["Introduction","id","className","data-section","href","target","rel","style","backgroundImage","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAEqBA,E,4JACnB,WACE,OACE,8BACE,yBACEC,GAAG,gBACHC,UAAU,gBACVC,eAAa,OAHf,SAKE,qBAAKD,UAAU,2BAAf,SACE,+BACE,wBACA,8BACE,8BACE,8BACE,8BACE,gCACE,sCACM,uBADN,cAIA,4BACE,oBACEA,UAAU,4BACVE,KAAK,qFACLC,OAAO,SACPC,IAAI,sBAJN,oBAOE,mBAAGJ,UAAU,mCAS3B,+BACE,wBACA,8BACE,8BACE,8BACE,8BACE,gCACE,4DAEE,uBAFF,gBAIA,4BACE,oBACEA,UAAU,4BACVE,KAAK,8CACLC,OAAO,SACPC,IAAI,sBAJN,wCAM8B,IAC5B,mBAAGJ,UAAU,uCAS7B,qBAAIK,MAAO,CAAEC,gBAAiB,0BAA9B,UACE,qBAAKN,UAAU,YACf,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,qBAAKA,UAAU,uFAAf,SACE,qBAAKA,UAAU,oBAAf,SACE,qBAAKA,UAAU,OAAf,SACE,yE,GAzEgBO,aCgB3BC,E,4JAbb,WACE,OACE,8BACE,8BACE,8BACE,cAAC,EAAD,c,GANMD,aCQEE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.baf4550d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Introduction extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <section\r\n          id=\"colorlib-hero\"\r\n          className=\"js-fullheight\"\r\n          data-section=\"home\"\r\n        >\r\n          <div className=\"flexslider js-fullheight\">\r\n            <ul>\r\n              <div />\r\n              <div>\r\n                <div>\r\n                  <div>\r\n                    <div>\r\n                      <div>\r\n                        <h1>\r\n                          Hi! <br />\r\n                          I'm Amit\r\n                        </h1>\r\n                        <p>\r\n                          <a\r\n                            className=\"btn btn-primary btn-learn\"\r\n                            href=\"https://drive.google.com/file/d/1K7SqcqdwdounrWKzp__NF0iHKstoyruu/view?usp=sharing\"\r\n                            target=\"_blank\"\r\n                            rel=\"noopener noreferrer\"\r\n                          >\r\n                            View CV\r\n                            <i className=\"icon-download4\" />\r\n                          </a>\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <li>\r\n                <div />\r\n                <div>\r\n                  <div>\r\n                    <div>\r\n                      <div>\r\n                        <div>\r\n                          <h1>\r\n                            I am learning to take nice\r\n                            <br /> PHOTOS !!\r\n                          </h1>\r\n                          <p>\r\n                            <a\r\n                              className=\"btn btn-primary btn-learn\"\r\n                              href=\"https://www.instagram.com/amit_asish/?hl=en\"\r\n                              target=\"_blank\"\r\n                              rel=\"noopener noreferrer\"\r\n                            >\r\n                              View my Photos on Instagram{\" \"}\r\n                              <i className=\"icon-briefcase3\" />\r\n                            </a>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li style={{ backgroundImage: \"url(images/img_bg.jpg)\" }}>\r\n                <div className=\"overlay\" />\r\n                <div className=\"container-fluid\">\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6 col-md-offset-3 col-md-pull-3 col-sm-12 col-xs-12 js-fullheight slider-text\">\r\n                      <div className=\"slider-text-inner\">\r\n                        <div className=\"desc\">\r\n                          <h1>My Playground</h1>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Introduction from \"./components/introduction\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div>\n          <div>\n            <Introduction></Introduction>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}